<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="mapper.movie">
	<resultMap type="MovieVO" id="movieResult">
	<!-- resultMap을 사용할때 id 필요 (list 같은 상황에) -->
		<result column="mid" property="mid" />
		<!-- <result column="poster" property="poster" /> -->
		<result column="poster" property="posterName" />
		<result column="link" property="link" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="genre" property="genre" />
		<result column="runTime" property="runTime" />
		<result column="director" property="director" />
		<result column="cast" property="cast" />
		<result column="age" property="age" />
		<result column="type" property="type" />
		<result column="openDate" property="openDate" />
		<result column="score" property="score" />
		
	</resultMap>
	
	<select id="movieList" resultMap="movieResult">
		SELECT MID, POSTER, LINK, TITLE, CONTENT, GENRE, RUNTIME, DIRECTOR, "CAST", AGE, "TYPE", OPENDATE
		FROM P_MOVIE
	</select>
	
	<select id="movieListReview" resultMap="movieResult">
		SELECT pm.MID ,pm.POSTER ,pm.LINK ,pm.TITLE ,pm.CONTENT ,pm.GENRE ,pm.RUNTIME ,pm.DIRECTOR ,pm."CAST" ,pm.AGE ,pm."TYPE" ,pm.OPENDATE ,pmavg.score
		FROM P_MOVIE pm ,
			(SELECT pm.MID ,AVG(pr.SCORE) score
			FROM P_REVIEW pr ,P_MOVIE pm 
			WHERE pr.MID(+) = pm.MID
			GROUP BY pm.MID ) pmavg
		WHERE pm.MID =pmavg.mid
		ORDER BY pm.MID

	</select>
	<select id="selectOne" resultMap="movieResult">
		SELECT MID, POSTER, LINK, TITLE, CONTENT, GENRE, RUNTIME, DIRECTOR, "CAST", AGE, "TYPE", OPENDATE
		FROM P_MOVIE WHERE MID=#{MID}
	</select>
	
	<insert id="insertMovie"> <!-- parameterType="movieVO" -->
		<![CDATA[INSERT INTO P_MOVIE
		(MID, POSTER, LINK, TITLE, CONTENT, GENRE, RUNTIME, DIRECTOR, "CAST", AGE, "TYPE", OPENDATE)
		VALUES(#{mid}, #{posterName}, #{link}, #{title},#{content},#{genre},#{runTime},#{director},#{cast},#{age},#{type},#{openDate})]]>
	</insert>
	
	<update id="updateMovie" parameterType="movieVO">
	UPDATE P_MOVIE
	SET POSTER=#{posterName}, LINK=#{link}, TITLE=#{title}, CONTENT=#{content}, GENRE=#{genre}, RUNTIME=#{runTime}, DIRECTOR=#{director}, "CAST"=#{cast}, AGE=#{age}, "TYPE"=#{type}, OPENDATE=#{openDate}
	WHERE MID=#{mid}
	</update>
	
	<delete id ="deleteMovie" parameterType="movieVO">
	DELETE FROM P_MOVIE
	WHERE MID='#{mid}'
	</delete>

	<select id="bookingMovieList" resultMap="movieResult">
		SELECT pm.TITLE, pm.MID 
		FROM P_MOVIE pm 
		JOIN (
		SELECT P_SCREENDATE.MID 
		FROM P_SCREENDATE 
		GROUP BY P_SCREENDATE.MID 
		) ps
		ON pm.mid = ps.MID 
	</select>
	
	<select id="movieListSelect" resultMap="movieResult">
		SELECT MID ,TITLE FROM P_MOVIE
		ORDER BY MID
	</select>
	
	<!-- 영화정보 추가시 일련번호 선택 -->
	<select id="selectMid" resultType="int">
		SELECT NVL(MAX(TO_NUMBER(SUBSTR(MID ,2))),0) 
		FROM P_MOVIE
	</select>
	
</mapper>